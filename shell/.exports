#!/usr/bin/env bash

export ZSHRC="$HOME/.zshrc"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

PATH=/usr/local/bin:/usr/sbin:/usr/local/sbin:$PATH
PATH=$HOME/.fzf/bin:$PATH
PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
PATH=$PATH:/usr/local/opt/openssl/bin
export PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

export VIMRC="$HOME/.vimrc"
export GTAGSLABEL=pygments

# AWS
export AWS_CLI_FILE_ENCODING=UTF-8
# export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"
# export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
export AWS_SDK_LOAD_CONFIG=1

# Docker
# export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
# export MACHINE_STORAGE_PATH="$XDG_DATA_HOME/docker-machine"

# Kubernetes
export KUBECONFIG=$HOME/.kube/config
# export MINIKUBE_HOME="$XDG_CONFIG_HOME/minikube"
# export KUBEHOME="$XDG_CONFIG_HOME/kube"
export KUBE_EDITOR='code --wait'

# Python
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export PYLINTHOME="$XDG_CONFIG_HOME/python/pylint"
export PYTHON_EGG_CACHE="$XDG_CACHE_HOME/python/python-eggs"
export PYTHONHISTFILE="$XDG_CACHE_HOME/python_history"
# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PYTHONSTARTUP="${HOME}/.pythonrc"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# IPython/Jupyter
export IPYTHONDIR=$XDG_CONFIG_HOME/ipython
export JUPYTER_CONFIG_DIR=$XDG_CONFIG_HOME/jupyter

# Golang
export GOPATH=$XDG_CONFIG_HOME/go
export GO111MODULE=on

# Rust
export RUSTUP_HOME=$XDG_CONFIG_HOME/rust/rustup
export CARGO_HOME=$XDG_CONFIG_HOME/rust/cargo
export PATH=$XDG_CONFIG_HOME/rust/cargo/bin:$PATH

# Postgres
export PSQLRC=$XDG_CONFIG_HOME/postgres/psqlrc
export PSQL_HISTORY=$XDG_CACHE_HOME/postgres/psql_history
export PGPASSFILE=$XDG_CONFIG_HOME/postgres/pgpass
export PGSERVICEFILE=$XDG_CONFIG_HOME/postgres/pg_service.conf

# Terraform
export TF_PLUGIN_CACHE_DIR="$XDG_CACHE_HOME/terraform.d/plugin-cache"
# export TF_CLI_CONFIG_FILE="$XDG_CONFIG_HOME/terraform.d/--.tfrc"

# ZSH
# export CLICOLOR=1
# export HISTFILE=$XDG_CACHE_HOME/zsh/zsh_history

## SSH
# export SSH_CONFIG=$XDG_CONFIG_HOME/ssh/config
# export SSH_PRIVATE_KEY=$XDG_CONFIG_HOME/ssh/id_rsa

# Vim
# export VIMINIT='let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc" | source $MYVIMRC'
# export VIMDOTDIR="$XDG_CONFIG_HOME/vim"

# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
export HISTTIMEFORMAT='%F %T '
# The number of commands in history stack in memory
export HISTSIZE=5000
# Maximum number of history lines
export HISTFILESIZE=10000
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL="erasedups:ignoreboth"
# Save multi-line commands as one command in bash
# Append to the history file, don't overwrite it
type shopt &>/dev/null && shopt -q -s cmdhist && shopt -s histappend

# Omit:
#  &            duplicates
#  [ \t]        lines starting with spaces
#  history *    history command
#  cd -*/cd +*  navigation on directory stack
export HISTIGNORE='&:[ \t]*:history *:cd -*[0-9]*:cd +*[0-9]*:exit:ls:bg:fg:clear'

# Save commands immediately after use to have shared history
# between Bash sessions.
#  'history -a'  append the current history to the history file
#  'history -n'  rereading anything new in history file into the
#                current shell’s history
export PROMPT_COMMAND='history -a ; history -n'

# Prefer US English and use UTF-8
export LC_ALL="en_US.UTF-8"
export LANG="en_US"

# Default editor for local and remote sessions
if [[ -n "$SSH_CONNECTION" ]]; then
  # on the server
  if command -v vim >/dev/null 2>&1; then
    export EDITOR='vim'
  else
    export EDITOR='vi'
  fi
else
  # local
  export EDITOR='code'
fi

# Enable ssh-agent (based on systemd service)
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

export PATH=$HOME/.yarn/bin:$PATH # for using yarn
# PATH=./node_modules/.bin:$PATH # first project's local modules
# PATH=$HOME/.npm-global/bin:$PATH # global node modules. Use lts node.js for the system with separate modules. Use NVM for managing versions in dev.
export PATH="$HOME/.nvm/versions/node/*/bin":$PATH # node.js versions bins

# NVM (should load after the system's node PATH)
if [ -d $HOME/.nvm ]; then
  export NVM_DIR="$HOME/.nvm"
  export NVM_LAZY_LOAD=true
fi

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=~/.node_history
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768'
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy'

# ANDROID_HOME=$HOME/Library/Android/sdk
# PATH=$PATH:$ANDROID_HOME/tools
# PATH=$PATH:$ANDROID_HOME/platform-tools
# JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
# PATH=$PATH:$JAVA_HOME
# PATH=$HOME/.fastlane/bin:$PATH

# Temp directory variable setup.
if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$USER"
  mkdir -p -m 700 "$TMPDIR"
fi
export TMPPREFIX="${TMPDIR%/}/zsh"

# export MANPATH="/usr/local/man:/usr/local/*/man:$MANPATH"
# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Default pager
export PAGER="less -X"

# less options
less_opts=(
  # Quit if entire file fits on first screen.
  --quit-if-one-screen
  # Ignore case in searches that do not contain uppercase.
  --ignore-case
  # Allow ANSI colour escapes, but no other escapes.
  --RAW-CONTROL-CHARS
  # Quiet the terminal bell. (when trying to scroll past the end of the buffer)
  --quiet
  # Do not complain when we are on a dumb terminal.
  --dumb
)
export LESS="${less_opts[*]}"

# highlighting inside manpages and elsewhere
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

#   Set default blocksize for ls, df, du
export BLOCKSIZE=1k

if which fd >/dev/null; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi
